name: PR Quality Gate

on:
  pull_request:
    branches: [ "main" ]

jobs:
  quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write
    env:
      PYTHON_VERSION: "3.12"
      COVERAGE_FAIL_UNDER: "80"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8 .

      - name: Security scan with bandit
        run: bandit -r . -x tests || true

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml
          python - <<'PY'
          import sys, xml.etree.ElementTree as ET
          t=ET.parse('coverage.xml').getroot().attrib.get('line-rate','0')
          rate=float(t)*100
          thr=float(80)
          print(f"Coverage: {rate:.1f}% (threshold {thr}%)")
          sys.exit(0 if rate>=thr else 1)
          PY

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  codeql:
    needs: quality
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  gitleaks:
    needs: quality
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: detect --no-git -v
